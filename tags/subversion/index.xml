<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Subversion on arkadiusz wasniewski blog</title><link>https://awasn.github.io/tags/subversion/</link><description>Recent content in Subversion on arkadiusz wasniewski blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 22 May 2009 21:32:00 +0200</lastBuildDate><atom:link href="https://awasn.github.io/tags/subversion/index.xml" rel="self" type="application/rss+xml"/><item><title>Hook scripts w PowerShell</title><link>https://awasn.github.io/hook-scripts-w-powershell/</link><pubDate>Fri, 22 May 2009 21:32:00 +0200</pubDate><guid>https://awasn.github.io/hook-scripts-w-powershell/</guid><description>Dawno, dawno temu (choć może nie aż tak dawno) popełniłem notkę na temat skryptów przechwytujących (hook scripts) dla repozytoriów systemu kontroli wersji Subversion. Chodziło o uniemożliwienie zapisania w repozytorium zmian, jeśli nie został podany do nich żaden komentarz wyjaśniający. Proponowany kod wyglądał mniej więcej tak:
private static int Main(string[] args) { string repositoryPath = args[0]; string transactionName = args[1]; var process = new Process(); process.StartInfo.FileName = &amp;#34;svnlook.exe&amp;#34;; process.StartInfo.Arguments = string.Format(&amp;#34;log -t {0} {1}&amp;#34;, transactionName, repositoryPath); process.</description></item><item><title>Usuwanie informacji o lokalnej kopii roboczej Subversion</title><link>https://awasn.github.io/usuwanie-informacji-o-lokalnej-kopii-roboczej-subversion/</link><pubDate>Wed, 15 Apr 2009 14:07:00 +0200</pubDate><guid>https://awasn.github.io/usuwanie-informacji-o-lokalnej-kopii-roboczej-subversion/</guid><description>Z przyczyn mniej lub bardziej zrozumiałych koniecznym było, aby usunąć z kilku projektów katalogi zawierające informacje o lokalnej kopii roboczej Subversion _svn. Przy braku połączenia z repozytorium kodu ręczne usuwanie to dłubanina i gwarantowana depresja. Z pomocą przyszedł PowerShell. Jak zwykle. Poniżej skrypt usuwający to co trzeba tam gdzie trzeba:
Clear-Host $path = Read-Host &amp;#34;Folder przeznaczony do wyczyszenia z katalogów _svn: &amp;#34; Get-ChildItem -Path $path -Include _svn -Force -Recurse -Filter FullName | Remove-Item -Force -Recurse Write-Host &amp;#34;Operacja usuwania katalogów _svn zakończona pomyślnie.</description></item><item><title>Rozwiązanie mobilne</title><link>https://awasn.github.io/rozwiazanie-mobilne/</link><pubDate>Thu, 11 Dec 2008 12:45:00 +0100</pubDate><guid>https://awasn.github.io/rozwiazanie-mobilne/</guid><description>Kilka miesięcy temu stałem się szczęśliwym posiadaczem projektu na przygotowanie kompletnego rozwiązania z zakresu szeroko pojętej sprzedaży dla &amp;ldquo;profesjonalnych&amp;rdquo; urządzeń mobilnych, czyli komputerów odpornych na niskie temperatury i kroploszczelne. Systemy operacyjne, które znalazły się w zasięgu projektu to:
Microsoft Windows for Pocket PC 2003, Windows Mobile 2003; Windows Mobile 5.0 for Pocket PC, Windows Mobile 5.0 for Pocket PC Phone Edition; Windows Mobile 6 Classic, Windows Mobile 6 Professional. Pod uwagę należało też brać możliwość pojawienia się w przyszłości konieczności działania programu w ramach Windows CE .</description></item><item><title>Subversion</title><link>https://awasn.github.io/subversion/</link><pubDate>Fri, 15 Feb 2008 11:56:00 +0100</pubDate><guid>https://awasn.github.io/subversion/</guid><description>Kolejna przeprowadzona przeze mnie prezentacja na połączonym XX Spotkaniu Warszawskiej Grupy .NET i XI Spotkaniu Polskiej Grupy Użytkowników SQL Server. Tym razem tematem był system kontroli wersji Subversion. W nasze spotkania wkroczyła technika i sesja była nagrywana. Niestety z powodów technicznych i czasoprzestrzennych ostatnia część prezentacji, czyli demo musiało zostać co nieco skrócone i nie wszystko zostało pokazane.
Na koniec informacja dla wszystkich zainteresowanych uczestnictwem w spotkaniach Warszawskiej Grupy .NET. Do grupy należeć może każdy zainteresowany tematyką programowania w ramach platformy .</description></item><item><title>tsvn:logminsize, tsvn:logtemplate</title><link>https://awasn.github.io/tsvn-logminsize-tsvn-logtemplate/</link><pubDate>Thu, 14 Feb 2008 16:00:00 +0100</pubDate><guid>https://awasn.github.io/tsvn-logminsize-tsvn-logtemplate/</guid><description>Ostatni wpis dotyczył wykorzystania skryptów przechwytujących do zablokowania dokonywania modyfikacji w ramach repozytorium Subversion jeśli nie zostanie podana informacja opisująca przyczynę zmian. Opisywana metoda działa na poziomie repozytorium. Jeśli jako klienta Subversion wykorzystujemy TortoiseSVN, możemy zamiast tego wykorzystać możliwości, jakie oferują specjalne właściwości, które można przypisać do katalogu objętego kontrolą SVN. Ponieważ są to rozszerzenia TortoiseSVN, które podobnie jak właściwości Subversion mogą być przez użytkownika modyfikowane i usuwane, nie są one mocnym zabezpieczeniem.</description></item><item><title>Hook scripts w C#</title><link>https://awasn.github.io/hook-scripts-w-csharp/</link><pubDate>Tue, 12 Feb 2008 16:48:00 +0100</pubDate><guid>https://awasn.github.io/hook-scripts-w-csharp/</guid><description>W strukturze katalogów składających się na repozytorium Subversion znajduje się folder o nazwie hooks. Zawiera on skrypty przechwytujące (hook scripts). Skrypty te wywoływane są w momencie zajścia w repozytorium określonego zdarzenia. Może to być np. żądanie zablokowania zasobu czy próba zatwierdzenia zmian. Przypisanie do zdarzenia następuje poprzez nadanie skryptowi odpowiedniej, rozpoznawalnej przez SVN nazwy. Mimo stosowania pojęcia skrypt, mogą to być tak naprawdę dowolne pliki wykonywalne. Nic nie stoi na przeszkodzie, abyśmy wykorzystali w tej roli język C#.</description></item><item><title>Kopia bezpieczeństwa SVN</title><link>https://awasn.github.io/kopia-bezpieczenstwa-svn/</link><pubDate>Fri, 19 Oct 2007 15:41:00 +0200</pubDate><guid>https://awasn.github.io/kopia-bezpieczenstwa-svn/</guid><description>Repozytoria Subversion, zgodnie z dokumentacją, mogą być archiwizowane w locie. Może jednak się zdarzyć, iż wykonywane w tak zwanym między czasie przez użytkowników operacje spowodują, iż otrzymana kopia, mimo swej poprawności będzie logicznie niespójna. Ze względu bowiem na czas trwania archiwizacji może dojść do sytuacji, iż w repozytorium zostaną zatwierdzone kolejne transakcje i nasza kopia części nowych danych nie uwzględni. Z tego też powodu zaleca się wcześniejsze przygotowanie repozytorium SVN do operacji archiwizacji danych.</description></item></channel></rss>